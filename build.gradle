plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7.+" apply false
}

architectury { minecraft = rootProject.minecraft }

// Read version-specific properties file
project.ext.set("props", new Properties())
file("props/${rootProject.minecraft}.properties").withInputStream { project.props.load(it) }

println()
println "Minecraft: ${rootProject.minecraft} (Java ${project.props.java})"
println "├── Parchment: ${project.props.mappings}"
println "├── Fabric: ${project.props.fabric}"
println "├── Forge: ${project.props.forge}"
println "└── NeoForge: ${project.props.neoforge}"
println()

// Write build.properties with the current version
new File(projectDir, "build.properties").text = String.format("MC_%s=\n", rootProject.minecraft.replace(".", "_"))

subprojects {
    apply plugin: "dev.architectury.loom"
    loom { silentMojangMappingsLicense() }

    repositories { maven { url "https://maven.parchmentmc.org" } }
    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft}:${project.props.mappings}@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = String.format("%s-%s", rootProject.id, rootProject.minecraft)

    repositories { maven { url "https://oss.sonatype.org/content/repositories/snapshots" } }
    dependencies { annotationProcessor "systems.manifold:manifold-preprocessor:2024.1.43" }

    java {
        withSourcesJar()
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.toVersion(project.props.java)
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = "UTF-8"
            options.release.set Integer.parseInt(project.props.java)
            options.compilerArgs += ["-Xplugin:Manifold"]
        }
    }
}
